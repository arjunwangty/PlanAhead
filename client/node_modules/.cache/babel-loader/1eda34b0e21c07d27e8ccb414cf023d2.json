{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nvar _jsxFileName = \"/Users/arjunwang/PlanAhead copy/client/src/discuss/CommentList.js\";\nimport React, { Component } from \"react\";\nimport Comment from \"./Comment\";\nimport PropTypes from \"prop-types\";\nimport \"./discuss.css\";\n\nclass CommentList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 2000);\n  }\n\n  handleDeleteComment(index) {\n    if (this.props.onDeleteComment) {\n      this.props.onDeleteComment(index);\n    }\n  }\n\n  render() {\n    if (this.props.comments !== null) {\n      if (this.state.isLoading) {\n        return React.createElement(\"div\", {\n          className: \"wrapper\",\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(_Spin, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, this.props.comments.map(comment => React.createElement(Comment, {\n          comment: comment,\n          key: comment.comment,\n          index: comment.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.array,\n  onDeleteComment: PropTypes.func\n};\nCommentList.defaultProps = {\n  comments: []\n};\nexport default CommentList;","map":{"version":3,"sources":["/Users/arjunwang/PlanAhead copy/client/src/discuss/CommentList.js"],"names":["React","Component","Comment","PropTypes","CommentList","constructor","state","isLoading","componentDidMount","setTimeout","setState","handleDeleteComment","index","props","onDeleteComment","render","comments","textAlign","map","comment","propTypes","array","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAMDI,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB,QAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC9B,WAAKD,KAAL,CAAWC,eAAX,CAA2BF,KAA3B;AACD;AACF;;AAKDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWG,QAAX,KAAwB,IAA5B,EAAkC;AAChC,UAAI,KAAKV,KAAL,CAAWC,SAAf,EAA0B;AACxB,eACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,KAAK,EAAE;AAAEU,YAAAA,SAAS,EAAE;AAAb,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAND,MAMO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKJ,KAAL,CAAWG,QAAX,CAAoBE,GAApB,CAAwBC,OAAO,IAC9B,oBAAC,OAAD;AACE,UAAA,OAAO,EAAEA,OADX;AAEE,UAAA,GAAG,EAAEA,OAAO,CAACA,OAFf;AAGE,UAAA,KAAK,EAAEA,OAAO,CAACP,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CADH,CADF;AAWD;AACF;AACF;;AAjDiC;;AAA9BR,W,CAaGgB,S,GAAY;AACjBJ,EAAAA,QAAQ,EAAEb,SAAS,CAACkB,KADH;AAEjBP,EAAAA,eAAe,EAAEX,SAAS,CAACmB;AAFV,C;AAbflB,W,CAwBGmB,Y,GAAe;AACpBP,EAAAA,QAAQ,EAAE;AADU,C;AA4BxB,eAAeZ,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Spin } from \"antd\";\nimport Comment from \"./Comment\";\nimport PropTypes from \"prop-types\";\nimport \"./discuss.css\";\n\nclass CommentList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 2000);\n  }\n  static propTypes = {\n    comments: PropTypes.array,\n    onDeleteComment: PropTypes.func\n  };\n\n  handleDeleteComment(index) {\n    if (this.props.onDeleteComment) {\n      this.props.onDeleteComment(index);\n    }\n  }\n\n  static defaultProps = {\n    comments: []\n  };\n  render() {\n    if (this.props.comments !== null) {\n      if (this.state.isLoading) {\n        return (\n          <div className=\"wrapper\" style={{ textAlign: \"center\" }}>\n            <Spin />\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            {this.props.comments.map(comment => (\n              <Comment\n                comment={comment}\n                key={comment.comment}\n                index={comment.index}\n              />\n            ))}\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}