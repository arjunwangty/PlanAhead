{"ast":null,"code":"var _jsxFileName = \"/Users/arjunwang/PlanAhead_master cloud/client/src/secondPage/semDrop.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport storage from \"../component/storage\";\nimport Draggable from \"../component/draggable\";\nimport Mod from \"../component/mod\";\nconst newStyle = {\n  verticalAlign: \"middle\",\n  justifyContent: \"center\",\n  whiteSpace: \"normal\",\n  backgroundColor: \"rgba(0,0,0,0)\",\n  height: \"360px\",\n  textAlign: \"center\",\n  paddingLeft: \"12px\"\n};\nexport default class SemDrop extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.drop = e => {\n      e.preventDefault();\n\n      if (this.props.isDroppable) {\n        const data = e.dataTransfer.getData(\"transfer\");\n        e.target.appendChild(document.getElementById(data));\n      }\n    };\n\n    this.allowDrop = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    const mods = this.props.modules;\n    return React.createElement(\"div\", {\n      id: this.props.id,\n      onDrop: this.drop,\n      onDragOver: this.allowDrop,\n      style: newStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, mods.map(mod => React.createElement(Draggable, {\n      className: \"list-inline-item\",\n      id: \"\".concat(mod[0], \"Draggable\"),\n      parent: this.props.id,\n      name: mod[2],\n      adyear: this.props.adyear,\n      major: this.props.major,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Mod, {\n      id: mod[0],\n      code: mod[0],\n      color: mod[1],\n      name: mod[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))));\n  }\n\n}\nSemDrop.propTypes = {\n  id: PropTypes.string,\n  heading: PropTypes.string,\n  isDroppable: PropTypes.bool,\n  style: PropTypes.object,\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/Users/arjunwang/PlanAhead_master cloud/client/src/secondPage/semDrop.jsx"],"names":["React","PropTypes","storage","Draggable","Mod","newStyle","verticalAlign","justifyContent","whiteSpace","backgroundColor","height","textAlign","paddingLeft","SemDrop","Component","drop","e","preventDefault","props","isDroppable","data","dataTransfer","getData","target","appendChild","document","getElementById","allowDrop","render","mods","modules","id","map","mod","adyear","major","propTypes","string","heading","bool","style","object","children","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,aAAa,EAAE,QADA;AAEfC,EAAAA,cAAc,EAAE,QAFD;AAGfC,EAAAA,UAAU,EAAE,QAHG;AAIfC,EAAAA,eAAe,EAAE,eAJF;AAKfC,EAAAA,MAAM,EAAE,OALO;AAMfC,EAAAA,SAAS,EAAE,QANI;AAOfC,EAAAA,WAAW,EAAE;AAPE,CAAjB;AASA,eAAe,MAAMC,OAAN,SAAsBb,KAAK,CAACc,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACnDC,IADmD,GAC5CC,CAAC,IAAI;AACVA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKC,KAAL,CAAWC,WAAf,EAA4B;AAC1B,cAAMC,IAAI,GAAGJ,CAAC,CAACK,YAAF,CAAeC,OAAf,CAAuB,UAAvB,CAAb;AACAN,QAAAA,CAAC,CAACO,MAAF,CAASC,WAAT,CAAqBC,QAAQ,CAACC,cAAT,CAAwBN,IAAxB,CAArB;AACD;AACF,KAPkD;;AAAA,SASnDO,SATmD,GASvCX,CAAC,IAAI;AACfA,MAAAA,CAAC,CAACC,cAAF;AACD,KAXkD;AAAA;;AAanDW,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAC,KAAKX,KAAL,CAAWY,OAAtB;AACA,WACE;AACE,MAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWa,EADjB;AAEE,MAAA,MAAM,EAAE,KAAKhB,IAFf;AAGE,MAAA,UAAU,EAAE,KAAKY,SAHnB;AAIE,MAAA,KAAK,EAAEtB,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGwB,IAAI,CAACG,GAAL,CAASC,GAAG,IACX,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,EAAE,YAAKA,GAAG,CAAC,CAAD,CAAR,cAFJ;AAGE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWa,EAHrB;AAIE,MAAA,IAAI,EAAEE,GAAG,CAAC,CAAD,CAJX;AAKE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWgB,MALrB;AAME,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAEF,GAAG,CAAC,CAAD,CAAZ;AAAiB,MAAA,IAAI,EAAEA,GAAG,CAAC,CAAD,CAA1B;AAA+B,MAAA,KAAK,EAAEA,GAAG,CAAC,CAAD,CAAzC;AAA8C,MAAA,IAAI,EAAEA,GAAG,CAAC,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADD,CANH,CADF;AAqBD;;AApCkD;AAuCrDpB,OAAO,CAACuB,SAAR,GAAoB;AAClBL,EAAAA,EAAE,EAAE9B,SAAS,CAACoC,MADI;AAElBC,EAAAA,OAAO,EAAErC,SAAS,CAACoC,MAFD;AAGlBlB,EAAAA,WAAW,EAAElB,SAAS,CAACsC,IAHL;AAIlBC,EAAAA,KAAK,EAAEvC,SAAS,CAACwC,MAJC;AAKlBC,EAAAA,QAAQ,EAAEzC,SAAS,CAAC0C;AALF,CAApB","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport storage from \"../component/storage\";\r\nimport Draggable from \"../component/draggable\";\r\nimport Mod from \"../component/mod\";\r\n\r\nconst newStyle = {\r\n  verticalAlign: \"middle\",\r\n  justifyContent: \"center\",\r\n  whiteSpace: \"normal\",\r\n  backgroundColor: \"rgba(0,0,0,0)\",\r\n  height: \"360px\",\r\n  textAlign: \"center\",\r\n  paddingLeft: \"12px\"\r\n};\r\nexport default class SemDrop extends React.Component {\r\n  drop = e => {\r\n    e.preventDefault();\r\n    if (this.props.isDroppable) {\r\n      const data = e.dataTransfer.getData(\"transfer\");\r\n      e.target.appendChild(document.getElementById(data));\r\n    }\r\n  };\r\n\r\n  allowDrop = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const mods=this.props.modules;\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        onDrop={this.drop}\r\n        onDragOver={this.allowDrop}\r\n        style={newStyle}\r\n      >\r\n        {mods.map(mod => (\r\n          <Draggable\r\n            className=\"list-inline-item\"\r\n            id={`${mod[0]}Draggable`}\r\n            parent={this.props.id}\r\n            name={mod[2]}\r\n            adyear={this.props.adyear}\r\n            major={this.props.major}\r\n          >\r\n            <Mod id={mod[0]} code={mod[0]} color={mod[1]} name={mod[2]} />\r\n          </Draggable>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSemDrop.propTypes = {\r\n  id: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  isDroppable: PropTypes.bool,\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n"]},"metadata":{},"sourceType":"module"}