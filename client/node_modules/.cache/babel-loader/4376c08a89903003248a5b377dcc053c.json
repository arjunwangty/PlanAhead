{"ast":null,"code":"var _jsxFileName = \"/Users/arjunwang/react/client/src/component/draggable.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport storage from \"./storage\";\nexport default class Draggable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.drag = e => {\n      e.dataTransfer.setData(\"transfer\", e.target.id);\n      this.className = \"\";\n    };\n\n    this.noAllowDrop = e => {\n      e.stopPropagation();\n    };\n\n    this.dragEnd = e => {\n      const _this$props = this.props,\n            adyear = _this$props.adyear,\n            major = _this$props.major;\n      const draggableCode = this.props.id;\n      const mod = document.getElementById(draggableCode).firstChild;\n      const mc = parseInt(mod.getAttribute(\"mc\"));\n      const code = mod.getAttribute(\"id\");\n      const color = mod.style.backgroundColor;\n      const initparent = this.state.parent;\n      const p = [\"SearchBarContainer\", \"SideBarContainer\", \"dust\"];\n\n      if (p.indexOf(initparent) < 0) {\n        document.getElementById(\"\".concat(initparent, \"button\")).innerText -= mc;\n      }\n\n      const currentParent = document.getElementById(e.target.id).parentElement.id;\n\n      if (p.indexOf(currentParent) < 0) {\n        this.setState({\n          parent: currentParent\n        });\n        document.getElementById(\"\".concat(currentParent, \"button\")).innerText = parseInt(document.getElementById(\"\".concat(currentParent, \"button\")).innerText) + mc;\n      } else {\n        this.setState({\n          parent: currentParent\n        });\n      }\n\n      if (p.indexOf(initparent) < 0 && p.indexOf(currentParent) >= 0) {\n        document.getElementById(\"totalmc\").innerText -= mc;\n        storage.changeTotalMc(adyear, major, -mc);\n\n        if (currentParent === \"SearchBarContainer\") {\n          storage.dndChange(adyear, major, initparent, currentParent, code, \"rgb(84,169,139)\", mc);\n        } else if (currentParent === \"SideBarContainer\") {\n          storage.dndChange(adyear, major, initparent, currentParent, code, \"rgb(120,206,179)\", mc);\n        } else {\n          storage.dndChange(adyear, major, initparent, currentParent, code, \"rgb(84,169,139)\", mc);\n        }\n\n        this.checkPre(code, initparent);\n      } else if (p.indexOf(initparent) >= 0 && p.indexOf(currentParent) < 0) {\n        document.getElementById(\"totalmc\").innerText = parseInt(document.getElementById(\"totalmc\").innerText) + mc;\n        storage.changeTotalMc(adyear, major, +mc);\n        storage.dndChange(adyear, major, initparent, currentParent, code, color, mc);\n        this.checkPre2(code, currentParent);\n      } else if (p.indexOf(initparent) < 0 && p.indexOf(currentParent) < 0 && initparent !== currentParent) {\n        storage.dndChange(adyear, major, initparent, currentParent, code, color, mc);\n        this.checkPre3(code, initparent, currentParent);\n      }\n    };\n\n    this.state = {\n      parent: this.props.parent\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      name: this.props.name,\n      id: this.props.id,\n      draggable: \"true\",\n      onDragStart: this.drag,\n      onDragOver: this.noAllowDrop,\n      onDragEnd: this.dragEnd,\n      value: this.props.value,\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        border: \"0px\",\n        margin: \"4px\",\n        width: 69,\n        height: \"25px\",\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n  checkPre(code, initparent) {\n    //drag from planner to sidebar/searchbar\n    const _this$props2 = this.props,\n          adyear = _this$props2.adyear,\n          major = _this$props2.major;\n    let name = document.getElementById(code).getAttribute(\"name\");\n    let originColor;\n\n    if (name === \"additional\") {\n      originColor = \"rgb(120,206,179)\";\n    } else {\n      originColor = \"rgb(84,169,139)\";\n    }\n\n    document.getElementById(code).style.backgroundColor = originColor;\n    const number = parseInt(initparent.substring(1));\n    let i = number + 1;\n\n    while (i <= 20) {\n      const colid = \"s\" + i;\n\n      if (document.getElementById(colid) != null) {\n        let children = document.getElementById(colid).children;\n\n        if (children.length > 0) {\n          for (let j = 0; j < children.length; j++) {\n            let mod = children[j].firstChild;\n            let prerequisite = JSON.parse(mod.getAttribute(\"parsedpre\"));\n\n            if (mod.style.backgroundColor !== \"black\") {\n              if (\" and \" in prerequisite && code in prerequisite[\" and \"]) {\n                mod.style.backgroundColor = \"black\";\n                storage.dndChangeColor(adyear, major, colid, mod.id, \"black\");\n                continue;\n              } else if (\" and \" in prerequisite) {\n                let pre = prerequisite[\" and \"];\n\n                for (let p of pre) {\n                  if (p[\" or \"] !== undefined) {\n                    if (p[\" or \"].indexOf(code) < 0) {\n                      continue;\n                    } else {\n                      let or = p[\" or \"];\n                      let find = 0;\n\n                      for (let h = 0; h++; h <= or.length) {\n                        if (document.getElementById(or[h]) === null) {\n                          continue;\n                        }\n\n                        let parent = document.getElementById(or[h]).parentElement.parentElement.id;\n\n                        if (parent !== \"SearchBarContainer\" && parent !== \"SideBarContainer\" && parent !== \"dust\") {\n                          find++;\n                        }\n\n                        if (find > 0) {\n                          break;\n                        }\n                      }\n\n                      if (find === 0) {\n                        mod.style.backgroundColor = \"black\";\n                        storage.dndChangeColor(adyear, major, colid, mod.id, \"black\");\n                        break;\n                      }\n                    }\n                  }\n                }\n              } else if (prerequisite[\" or \"] !== undefined) {\n                let or = prerequisite[\" or \"];\n                let find = 0;\n\n                for (let h = 0; h++; h <= or.length) {\n                  if (document.getElementById(or[h]) === null) {\n                    continue;\n                  }\n\n                  let parent = document.getElementById(or[h]).parentElement.parentElement.id;\n\n                  if (parent !== \"SearchBarContainer\" && parent !== \"SideBarContainer\" && parent !== \"dust\") {\n                    find++;\n                  }\n\n                  if (find > 0) {\n                    break;\n                  }\n                }\n\n                if (find === 0) {\n                  mod.style.backgroundColor = \"black\";\n                  storage.dndChangeColor(adyear, major, colid, mod.id, \"black\");\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      i++;\n    }\n  }\n\n  checkPre2(code, currentParent) {\n    //drag from sidebar/searchbar to planner\n    //1.check for its own color\n    const _this$props3 = this.props,\n          adyear = _this$props3.adyear,\n          major = _this$props3.major;\n    let currentcol = parseInt(currentParent.substring(1));\n    let mod = document.getElementById(code);\n    let prerequisite = JSON.parse(mod.getAttribute(\"parsedpre\"));\n\n    if (\" and \" in prerequisite) {\n      let totalnoofmods = 0;\n      let totalcounter = 0; //check for prerequisite[\" and \"]\n\n      for (let p of prerequisite[\" and \"]) {\n        //check for prerequisite[\" and \"][\" or \"]\n        totalnoofmods++;\n\n        if (p[\" or \"] !== undefined) {\n          let or = p[\" or \"];\n          let count = 0;\n\n          for (let o of or) {\n            if (document.getElementById(o) === null) {\n              continue;\n            }\n\n            let oparent = document.getElementById(o).parentElement.parentElement.id;\n\n            if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n              let ocol = parseInt(oparent.substring(1));\n\n              if (ocol < currentcol) {\n                count++;\n                break;\n              }\n            }\n          }\n\n          if (count > 0) {\n            totalcounter++;\n            continue;\n          } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n          else {\n              mod.style.backgroundColor = \"black\";\n              storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n              break;\n            } //else color = black and break\n          //check for normal code in prerequisite[\" and \"]\n\n        } else {\n          if (document.getElementById(p) === null) {\n            mod.style.backgroundColor = \"black\";\n            storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n            break;\n          }\n\n          let oparent = document.getElementById(p).parentElement.parentElement.id;\n\n          if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n            let ocol = parseInt(oparent.substring(1));\n\n            if (ocol < currentcol) {\n              totalcounter++;\n              continue;\n            } // if p is in front of the mod, continue\n            else {\n                mod.style.backgroundColor = \"black\";\n                storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n                break;\n              } //else color = black and stop checking\n\n          } else {\n            mod.style.backgroundColor = \"black\";\n            storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n            break;\n          }\n        }\n      }\n\n      if (totalnoofmods === totalcounter) {\n        let name = mod.getAttribute(\"name\");\n        let originColor;\n\n        if (name === \"additional\") {\n          originColor = \"rgb(120,206,179)\";\n        } else {\n          originColor = \"rgb(84,169,139)\";\n        }\n\n        mod.style.backgroundColor = originColor;\n        storage.dndChangeColor(adyear, major, currentParent, mod.id, originColor);\n      }\n    } else if (\" or \" in prerequisite) {\n      //check for prerequisite[' or ']\n      let count = 0;\n\n      for (let o of prerequisite[\" or \"]) {\n        if (document.getElementById(o) === null) {\n          continue;\n        }\n\n        let oparent = document.getElementById(o).parentElement.parentElement.id;\n\n        if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n          let ocol = parseInt(oparent.substring(1));\n\n          if (ocol < currentcol) {\n            count++;\n            break;\n          }\n        }\n      }\n\n      if (count === 0) {\n        mod.style.backgroundColor = \"black\";\n        storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n      }\n    } //end of check for self\n    //2. check for other mods behind this mod\n\n\n    let i = currentcol + 1;\n\n    while (i <= 20) {\n      const colid = \"s\" + i;\n\n      if (document.getElementById(colid) != null) {\n        let children = document.getElementById(colid).children;\n\n        if (children.length > 0) {\n          //check for each child\n          for (let j = 0; j < children.length; j++) {\n            let othermod = children[j].firstChild;\n            let otherprerequisite = JSON.parse(othermod.getAttribute(\"parsedpre\")); //only check for those of black color\n\n            if (othermod.style.backgroundColor === \"black\") {\n              if (\" and \" in otherprerequisite) {\n                //check for prerequisite[\" and \"]\n                let totalnoofmods = 0;\n                let totalcounter = 0;\n\n                for (let p of otherprerequisite[\" and \"]) {\n                  //check for prerequisite[\" and \"][\" or \"]\n                  totalnoofmods++;\n\n                  if (p[\" or \"] !== undefined) {\n                    let or = p[\" or \"];\n                    let count = 0;\n\n                    for (let r of or) {\n                      if (document.getElementById(r) === null) {\n                        continue;\n                      }\n\n                      let rparent = document.getElementById(r).parentElement.parentElement.id;\n\n                      if (rparent !== \"SearchBarContainer\" && rparent !== \"SideBarContainer\" && rparent !== \"dust\") {\n                        let ocol = parseInt(rparent.substring(1));\n\n                        if (ocol < i) {\n                          count++;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (count > 0) {\n                      totalcounter++;\n                      continue;\n                    } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n\n                  } else {\n                    if (document.getElementById(p) === null) {\n                      break;\n                    }\n\n                    let rparent = document.getElementById(p).parentElement.parentElement.id;\n\n                    if (rparent !== \"SearchBarContainer\" && rparent !== \"SideBarContainer\" && rparent !== \"dust\") {\n                      let ocol = parseInt(rparent.substring(1));\n\n                      if (ocol < i) {\n                        totalcounter++;\n                        continue;\n                      } // if p is in front of the mod, continue\n                      else {\n                          break;\n                        } //else color = black and stop checking\n\n                    } else {\n                      break;\n                    }\n                  }\n                }\n\n                if (totalcounter === totalnoofmods) {\n                  let name = othermod.getAttribute(\"name\");\n                  let originColor;\n\n                  if (name === \"additional\") {\n                    originColor = \"rgb(120,206,179)\";\n                  } else {\n                    originColor = \"rgb(84,169,139)\";\n                  }\n\n                  othermod.style.backgroundColor = originColor;\n                  storage.dndChangeColor(adyear, major, colid, othermod.id, originColor);\n                }\n              } else if (otherprerequisite[\" or \"] !== undefined) {\n                //check for prerequisite[' or ']\n                let count = 0;\n\n                for (let m of otherprerequisite[\" or \"]) {\n                  if (document.getElementById(m) === null) {\n                    continue;\n                  }\n\n                  let oparent = document.getElementById(m).parentElement.parentElement.id;\n\n                  if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n                    let ocol = parseInt(oparent.substring(1));\n\n                    if (ocol < i) {\n                      count++;\n                      break;\n                    }\n                  }\n                }\n\n                if (count > 0) {\n                  let name = othermod.getAttribute(\"name\");\n                  let originColor;\n\n                  if (name === \"aditional\") {\n                    originColor = \"rgb(120,206,179)\";\n                  } else {\n                    originColor = \"rgb(84,169,139)\";\n                  }\n\n                  othermod.style.backgroundColor = originColor;\n                  storage.dndChangeColor(adyear, major, colid, othermod.id, originColor);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      i++;\n    }\n  }\n\n  checkPre3(code, initparent, currentParent) {\n    //drag from 1 col to another col\n    //1.update its own color if its color is black\n    const _this$props4 = this.props,\n          adyear = _this$props4.adyear,\n          major = _this$props4.major;\n    let initcol = parseInt(initparent.substring(1));\n    let currentcol = parseInt(currentParent.substring(1));\n    let mod = document.getElementById(code);\n    let prerequisite = JSON.parse(mod.getAttribute(\"parsedpre\"));\n\n    if (mod.style.backgroundColor === \"black\" && currentcol > initcol || mod.style.backgroundColor !== \"black\" && currentcol < initcol) {\n      if (\" and \" in prerequisite) {\n        //check for prerequisite[\" and \"]\n        let totalnoofmods = 0;\n        let totalcounter = 0;\n\n        for (let p of prerequisite[\" and \"]) {\n          //check for prerequisite[\" and \"][\" or \"]\n          totalnoofmods++;\n\n          if (p[\" or \"] !== undefined) {\n            let or = p[\" or \"];\n            let count = 0;\n\n            for (let o of or) {\n              if (document.getElementById(o) === null) {\n                continue;\n              }\n\n              let oparent = document.getElementById(o).parentElement.parentElement.id;\n\n              if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n                let ocol = parseInt(oparent.substring(1));\n\n                if (ocol < currentcol) {\n                  count++;\n                  break;\n                }\n              }\n            }\n\n            if (count > 0) {\n              totalcounter++;\n              continue;\n            } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n            else {\n                break;\n              } //else color = black and break\n            //check for normal code in prerequisite[\" and \"]\n\n          } else {\n            if (document.getElementById(p) === null) {\n              break;\n            }\n\n            let oparent = document.getElementById(p).parentElement.parentElement.id;\n\n            if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n              let ocol = parseInt(oparent.substring(1));\n\n              if (ocol < currentcol) {\n                totalcounter++;\n                continue;\n              } // if p is in front of the mod, continue\n              else {\n                  break;\n                } //else color = black and stop checking\n\n            } else {\n              break;\n            }\n          }\n        }\n\n        if (totalcounter === totalnoofmods) {\n          let name = mod.getAttribute(\"name\");\n          let originColor;\n\n          if (name === \"additional\") {\n            originColor = \"rgb(120,206,179)\";\n          } else {\n            originColor = \"rgb(84,169,139)\";\n          }\n\n          mod.style.backgroundColor = originColor;\n          storage.dndChangeColor(adyear, major, currentParent, mod.id, originColor);\n        }\n      } else if (\" or \" in prerequisite) {\n        //check for prerequisite[' or ']\n        let count = 0;\n\n        for (let o of prerequisite[\" or \"]) {\n          if (document.getElementById(o) === null) {\n            continue;\n          }\n\n          let oparent = document.getElementById(o).parentElement.parentElement.id;\n\n          if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n            let ocol = parseInt(oparent.substring(1));\n\n            if (ocol < currentcol) {\n              count++;\n              break;\n            }\n          }\n        }\n\n        if (count === 0) {\n          mod.style.backgroundColor = \"black\";\n          storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n        } else {\n          let name = mod.getAttribute(\"name\");\n          let originColor;\n\n          if (name === \"additional\") {\n            originColor = \"rgb(120,206,179)\";\n          } else {\n            originColor = \"rgb(84,169,139)\";\n          }\n\n          mod.style.backgroundColor = originColor;\n          storage.dndChangeColor(adyear, major, currentParent, mod.id, originColor);\n        }\n      }\n    } //end of check for self\n    //2. check for other mods on col between init and current\n\n\n    let i = Math.min(parseInt(initparent.substring(1)), currentcol);\n    let end = Math.max(parseInt(initparent.substring(1)), currentcol);\n\n    while (i <= end) {\n      const colid = \"s\" + i;\n\n      if (document.getElementById(colid) != null) {\n        let children = document.getElementById(colid).children;\n\n        if (children.length > 0) {\n          //check for each child\n          for (let j = 0; j < children.length; j++) {\n            let othermod = children[j].firstChild;\n            let otherprerequisite = JSON.parse(othermod.getAttribute(\"parsedpre\"));\n            let name = othermod.getAttribute(\"name\");\n            let originColor = \"\";\n\n            if (name === \"additional\") {\n              originColor = \"rgb(120,206,179)\";\n            } else {\n              originColor = \"rgb(84,169,139)\";\n            }\n\n            if (\" and \" in otherprerequisite) {\n              let totalnoofmods = 0;\n              let totalcounter = 0; //check for prerequisite[\" and \"]\n\n              for (let p of otherprerequisite[\" and \"]) {\n                //check for prerequisite[\" and \"][\" or \"]\n                totalnoofmods++;\n\n                if (p[\" or \"] !== undefined) {\n                  let or = p[\" or \"];\n                  let count = 0;\n\n                  for (let r of or) {\n                    if (document.getElementById(r) === null) {\n                      continue;\n                    }\n\n                    let rparent = document.getElementById(r).parentElement.parentElement.id;\n\n                    if (rparent !== \"SearchBarContainer\" && rparent !== \"SideBarContainer\" && rparent !== \"dust\") {\n                      let ocol = parseInt(rparent.substring(1));\n\n                      if (ocol < i) {\n                        count++;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (count > 0) {\n                    totalcounter++;\n                    continue;\n                  } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n                  else {\n                      othermod.style.backgroundColor = \"black\";\n                      storage.dndChangeColor(adyear, major, colid, othermod.id, \"black\");\n                      break;\n                    } //else color = black and break\n                  //check for normal code in prerequisite[\" and \"]\n\n                } else {\n                  if (document.getElementById(p) === null) {\n                    othermod.style.backgroundColor = \"black\";\n                    storage.dndChangeColor(adyear, major, colid, othermod.id, \"black\");\n                    break;\n                  }\n\n                  let rparent = document.getElementById(p).parentElement.parentElement.id;\n\n                  if (rparent !== \"SearchBarContainer\" && rparent !== \"SideBarContainer\" && rparent !== \"dust\") {\n                    let ocol = parseInt(rparent.substring(1));\n\n                    if (ocol < i) {\n                      totalcounter++;\n                      continue;\n                    } // if p is in front of the mod, continue\n                    else {\n                        othermod.style.backgroundColor = \"black\";\n                        storage.dndChangeColor(adyear, major, colid, othermod.id, \"black\");\n                        break;\n                      } //else color = black and stop checking\n\n                  } else {\n                    othermod.style.backgroundColor = \"black\";\n                    storage.dndChangeColor(adyear, major, colid, othermod.id, \"black\");\n                    break;\n                  }\n                }\n              }\n\n              if (totalcounter === totalnoofmods) {\n                othermod.style.backgroundColor = originColor;\n                storage.dndChangeColor(adyear, major, colid, othermod.id, originColor);\n              }\n            } else if (otherprerequisite[\" or \"] !== undefined) {\n              //check for prerequisite[' or ']\n              let count = 0;\n\n              for (let m of otherprerequisite[\" or \"]) {\n                if (document.getElementById(m) === null) {\n                  continue;\n                }\n\n                let oparent = document.getElementById(m).parentElement.parentElement.id;\n\n                if (oparent !== \"SearchBarContainer\" && oparent !== \"SideBarContainer\" && oparent !== \"dust\") {\n                  let ocol = parseInt(oparent.substring(1));\n\n                  if (ocol < i) {\n                    count++;\n                    break;\n                  }\n                }\n              }\n\n              if (count === 0) {\n                othermod.style.backgroundColor = \"black\";\n                storage.dndChangeColor(adyear, major, colid, othermod.id, \"black\");\n              } else {\n                othermod.style.backgroundColor = originColor;\n                storage.dndChangeColor(adyear, major, colid, othermod.id, originColor);\n              }\n            }\n          }\n        }\n      }\n\n      i++;\n    }\n  }\n\n}\nDraggable.propTypes = {\n  id: PropTypes.string,\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/Users/arjunwang/react/client/src/component/draggable.jsx"],"names":["React","PropTypes","storage","Draggable","Component","constructor","props","drag","e","dataTransfer","setData","target","id","className","noAllowDrop","stopPropagation","dragEnd","adyear","major","draggableCode","mod","document","getElementById","firstChild","mc","parseInt","getAttribute","code","color","style","backgroundColor","initparent","state","parent","p","indexOf","innerText","currentParent","parentElement","setState","changeTotalMc","dndChange","checkPre","checkPre2","checkPre3","render","name","value","border","margin","width","height","float","children","originColor","number","substring","i","colid","length","j","prerequisite","JSON","parse","dndChangeColor","pre","undefined","or","find","h","currentcol","totalnoofmods","totalcounter","count","o","oparent","ocol","othermod","otherprerequisite","r","rparent","m","initcol","Math","min","end","max","propTypes","string","node"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport storage from \"./storage\";\n\nexport default class Draggable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { parent: this.props.parent };\n  }\n\n  render() {\n    return (\n      <div\n        name={this.props.name}\n        id={this.props.id}\n        draggable=\"true\"\n        onDragStart={this.drag}\n        onDragOver={this.noAllowDrop}\n        onDragEnd={this.dragEnd}\n        value={this.props.value}\n        style={{\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          border: \"0px\",\n          margin: \"4px\",\n          width: 69,\n          height: \"25px\",\n          float: \"left\"\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n\n  drag = e => {\n    e.dataTransfer.setData(\"transfer\", e.target.id);\n    this.className = \"\";\n  };\n\n  noAllowDrop = e => {\n    e.stopPropagation();\n  };\n\n  dragEnd = e => {\n    const { adyear, major } = this.props;\n    const draggableCode = this.props.id;\n    const mod = document.getElementById(draggableCode).firstChild;\n    const mc = parseInt(mod.getAttribute(\"mc\"));\n    const code = mod.getAttribute(\"id\");\n    const color = mod.style.backgroundColor;\n    const initparent = this.state.parent;\n    const p = [\"SearchBarContainer\", \"SideBarContainer\", \"dust\"];\n\n    if (p.indexOf(initparent) < 0) {\n      document.getElementById(`${initparent}button`).innerText -= mc;\n    }\n\n    const currentParent = document.getElementById(e.target.id).parentElement.id;\n    if (p.indexOf(currentParent) < 0) {\n      this.setState({\n        parent: currentParent\n      });\n      document.getElementById(`${currentParent}button`).innerText =\n        parseInt(document.getElementById(`${currentParent}button`).innerText) +\n        mc;\n    } else {\n      this.setState({\n        parent: currentParent\n      });\n    }\n    if (p.indexOf(initparent) < 0 && p.indexOf(currentParent) >= 0) {\n      document.getElementById(\"totalmc\").innerText -= mc;\n      storage.changeTotalMc(adyear, major, -mc);\n      if (currentParent === \"SearchBarContainer\") {\n        storage.dndChange(\n          adyear,\n          major,\n          initparent,\n          currentParent,\n          code,\n          \"rgb(84,169,139)\",\n          mc\n        );\n      } else if (currentParent === \"SideBarContainer\") {\n        storage.dndChange(\n          adyear,\n          major,\n          initparent,\n          currentParent,\n          code,\n          \"rgb(120,206,179)\",\n          mc\n        );\n      } else {\n        storage.dndChange(\n          adyear,\n          major,\n          initparent,\n          currentParent,\n          code,\n          \"rgb(84,169,139)\",\n          mc\n        );\n      }\n      this.checkPre(code, initparent);\n    } else if (p.indexOf(initparent) >= 0 && p.indexOf(currentParent) < 0) {\n      document.getElementById(\"totalmc\").innerText =\n        parseInt(document.getElementById(\"totalmc\").innerText) + mc;\n      storage.changeTotalMc(adyear, major, +mc);\n      storage.dndChange(\n        adyear,\n        major,\n        initparent,\n        currentParent,\n        code,\n        color,\n        mc\n      );\n      this.checkPre2(code, currentParent);\n    } else if (\n      p.indexOf(initparent) < 0 &&\n      p.indexOf(currentParent) < 0 &&\n      initparent !== currentParent\n    ) {\n      storage.dndChange(\n        adyear,\n        major,\n        initparent,\n        currentParent,\n        code,\n        color,\n        mc\n      );\n      this.checkPre3(code, initparent, currentParent);\n    }\n  };\n\n  checkPre(code, initparent) {\n    //drag from planner to sidebar/searchbar\n    const { adyear, major } = this.props;\n    let name = document.getElementById(code).getAttribute(\"name\");\n    let originColor;\n    if (name === \"additional\") {\n      originColor = \"rgb(120,206,179)\";\n    } else {\n      originColor = \"rgb(84,169,139)\";\n    }\n    document.getElementById(code).style.backgroundColor = originColor;\n\n    const number = parseInt(initparent.substring(1));\n    let i = number + 1;\n    while (i <= 20) {\n      const colid = \"s\" + i;\n      if (document.getElementById(colid) != null) {\n        let children = document.getElementById(colid).children;\n        if (children.length > 0) {\n          for (let j = 0; j < children.length; j++) {\n            let mod = children[j].firstChild;\n            let prerequisite = JSON.parse(mod.getAttribute(\"parsedpre\"));\n            if (mod.style.backgroundColor !== \"black\") {\n              if (\" and \" in prerequisite && code in prerequisite[\" and \"]) {\n                mod.style.backgroundColor = \"black\";\n                storage.dndChangeColor(adyear, major, colid, mod.id, \"black\");\n                continue;\n              } else if (\" and \" in prerequisite) {\n                let pre = prerequisite[\" and \"];\n                for (let p of pre) {\n                  if (p[\" or \"] !== undefined) {\n                    if (p[\" or \"].indexOf(code) < 0) {\n                      continue;\n                    } else {\n                      let or = p[\" or \"];\n                      let find = 0;\n                      for (let h = 0; h++; h <= or.length) {\n                        if (document.getElementById(or[h]) === null) {\n                          continue;\n                        }\n                        let parent = document.getElementById(or[h])\n                          .parentElement.parentElement.id;\n                        if (\n                          parent !== \"SearchBarContainer\" &&\n                          parent !== \"SideBarContainer\" &&\n                          parent !== \"dust\"\n                        ) {\n                          find++;\n                        }\n                        if (find > 0) {\n                          break;\n                        }\n                      }\n                      if (find === 0) {\n                        mod.style.backgroundColor = \"black\";\n                        storage.dndChangeColor(\n                          adyear,\n                          major,\n                          colid,\n                          mod.id,\n                          \"black\"\n                        );\n                        break;\n                      }\n                    }\n                  }\n                }\n              } else if (prerequisite[\" or \"] !== undefined) {\n                let or = prerequisite[\" or \"];\n                let find = 0;\n                for (let h = 0; h++; h <= or.length) {\n                  if (document.getElementById(or[h]) === null) {\n                    continue;\n                  }\n                  let parent = document.getElementById(or[h]).parentElement\n                    .parentElement.id;\n                  if (\n                    parent !== \"SearchBarContainer\" &&\n                    parent !== \"SideBarContainer\" &&\n                    parent !== \"dust\"\n                  ) {\n                    find++;\n                  }\n                  if (find > 0) {\n                    break;\n                  }\n                }\n                if (find === 0) {\n                  mod.style.backgroundColor = \"black\";\n                  storage.dndChangeColor(adyear, major, colid, mod.id, \"black\");\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      i++;\n    }\n  }\n\n  checkPre2(code, currentParent) {\n    //drag from sidebar/searchbar to planner\n    //1.check for its own color\n    const { adyear, major } = this.props;\n    let currentcol = parseInt(currentParent.substring(1));\n    let mod = document.getElementById(code);\n    let prerequisite = JSON.parse(mod.getAttribute(\"parsedpre\"));\n\n    if (\" and \" in prerequisite) {\n      let totalnoofmods = 0;\n      let totalcounter = 0;\n      //check for prerequisite[\" and \"]\n      for (let p of prerequisite[\" and \"]) {\n        //check for prerequisite[\" and \"][\" or \"]\n        totalnoofmods++;\n        if (p[\" or \"] !== undefined) {\n          let or = p[\" or \"];\n          let count = 0;\n          for (let o of or) {\n            if (document.getElementById(o) === null) {\n              continue;\n            }\n            let oparent = document.getElementById(o).parentElement.parentElement\n              .id;\n            if (\n              oparent !== \"SearchBarContainer\" &&\n              oparent !== \"SideBarContainer\" &&\n              oparent !== \"dust\"\n            ) {\n              let ocol = parseInt(oparent.substring(1));\n              if (ocol < currentcol) {\n                count++;\n                break;\n              }\n            }\n          }\n          if (count > 0) {\n            totalcounter++;\n            continue;\n          } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n          else {\n            mod.style.backgroundColor = \"black\";\n            storage.dndChangeColor(\n              adyear,\n              major,\n              currentParent,\n              mod.id,\n              \"black\"\n            );\n            break;\n          } //else color = black and break\n          //check for normal code in prerequisite[\" and \"]\n        } else {\n          if (document.getElementById(p) === null) {\n            mod.style.backgroundColor = \"black\";\n            storage.dndChangeColor(\n              adyear,\n              major,\n              currentParent,\n              mod.id,\n              \"black\"\n            );\n            break;\n          }\n          let oparent = document.getElementById(p).parentElement.parentElement\n            .id;\n          if (\n            oparent !== \"SearchBarContainer\" &&\n            oparent !== \"SideBarContainer\" &&\n            oparent !== \"dust\"\n          ) {\n            let ocol = parseInt(oparent.substring(1));\n            if (ocol < currentcol) {\n              totalcounter++;\n              continue;\n            } // if p is in front of the mod, continue\n            else {\n              mod.style.backgroundColor = \"black\";\n              storage.dndChangeColor(\n                adyear,\n                major,\n                currentParent,\n                mod.id,\n                \"black\"\n              );\n              break;\n            } //else color = black and stop checking\n          } else {\n            mod.style.backgroundColor = \"black\";\n            storage.dndChangeColor(\n              adyear,\n              major,\n              currentParent,\n              mod.id,\n              \"black\"\n            );\n            break;\n          }\n        }\n      }\n      if (totalnoofmods === totalcounter) {\n        let name = mod.getAttribute(\"name\");\n\n        let originColor;\n        if (name === \"additional\") {\n          originColor = \"rgb(120,206,179)\";\n        } else {\n          originColor = \"rgb(84,169,139)\";\n        }\n        mod.style.backgroundColor = originColor;\n        storage.dndChangeColor(\n          adyear,\n          major,\n          currentParent,\n          mod.id,\n          originColor\n        );\n      }\n    } else if (\" or \" in prerequisite) {\n      //check for prerequisite[' or ']\n      let count = 0;\n      for (let o of prerequisite[\" or \"]) {\n        if (document.getElementById(o) === null) {\n          continue;\n        }\n        let oparent = document.getElementById(o).parentElement.parentElement.id;\n        if (\n          oparent !== \"SearchBarContainer\" &&\n          oparent !== \"SideBarContainer\" &&\n          oparent !== \"dust\"\n        ) {\n          let ocol = parseInt(oparent.substring(1));\n          if (ocol < currentcol) {\n            count++;\n            break;\n          }\n        }\n      }\n      if (count === 0) {\n        mod.style.backgroundColor = \"black\";\n        storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n      }\n    }\n    //end of check for self\n\n    //2. check for other mods behind this mod\n    let i = currentcol + 1;\n    while (i <= 20) {\n      const colid = \"s\" + i;\n      if (document.getElementById(colid) != null) {\n        let children = document.getElementById(colid).children;\n        if (children.length > 0) {\n          //check for each child\n          for (let j = 0; j < children.length; j++) {\n            let othermod = children[j].firstChild;\n            let otherprerequisite = JSON.parse(\n              othermod.getAttribute(\"parsedpre\")\n            );\n            //only check for those of black color\n            if (othermod.style.backgroundColor === \"black\") {\n              if (\" and \" in otherprerequisite) {\n                //check for prerequisite[\" and \"]\n                let totalnoofmods = 0;\n                let totalcounter = 0;\n                for (let p of otherprerequisite[\" and \"]) {\n                  //check for prerequisite[\" and \"][\" or \"]\n                  totalnoofmods++;\n                  if (p[\" or \"] !== undefined) {\n                    let or = p[\" or \"];\n                    let count = 0;\n                    for (let r of or) {\n                      if (document.getElementById(r) === null) {\n                        continue;\n                      }\n                      let rparent = document.getElementById(r).parentElement\n                        .parentElement.id;\n                      if (\n                        rparent !== \"SearchBarContainer\" &&\n                        rparent !== \"SideBarContainer\" &&\n                        rparent !== \"dust\"\n                      ) {\n                        let ocol = parseInt(rparent.substring(1));\n                        if (ocol < i) {\n                          count++;\n                          break;\n                        }\n                      }\n                    }\n                    if (count > 0) {\n                      totalcounter++;\n                      continue;\n                    } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n                  } else {\n                    if (document.getElementById(p) === null) {\n                      break;\n                    }\n                    let rparent = document.getElementById(p).parentElement\n                      .parentElement.id;\n                    if (\n                      rparent !== \"SearchBarContainer\" &&\n                      rparent !== \"SideBarContainer\" &&\n                      rparent !== \"dust\"\n                    ) {\n                      let ocol = parseInt(rparent.substring(1));\n                      if (ocol < i) {\n                        totalcounter++;\n                        continue;\n                      } // if p is in front of the mod, continue\n                      else {\n                        break;\n                      } //else color = black and stop checking\n                    } else {\n                      break;\n                    }\n                  }\n                }\n                if (totalcounter === totalnoofmods) {\n                  let name = othermod.getAttribute(\"name\");\n                  let originColor;\n                  if (name === \"additional\") {\n                    originColor = \"rgb(120,206,179)\";\n                  } else {\n                    originColor = \"rgb(84,169,139)\";\n                  }\n                  othermod.style.backgroundColor = originColor;\n                  storage.dndChangeColor(\n                    adyear,\n                    major,\n                    colid,\n                    othermod.id,\n                    originColor\n                  );\n                }\n              } else if (otherprerequisite[\" or \"] !== undefined) {\n                //check for prerequisite[' or ']\n                let count = 0;\n                for (let m of otherprerequisite[\" or \"]) {\n                  if (document.getElementById(m) === null) {\n                    continue;\n                  }\n                  let oparent = document.getElementById(m).parentElement\n                    .parentElement.id;\n                  if (\n                    oparent !== \"SearchBarContainer\" &&\n                    oparent !== \"SideBarContainer\" &&\n                    oparent !== \"dust\"\n                  ) {\n                    let ocol = parseInt(oparent.substring(1));\n                    if (ocol < i) {\n                      count++;\n                      break;\n                    }\n                  }\n                }\n                if (count > 0) {\n                  let name = othermod.getAttribute(\"name\");\n                  let originColor;\n                  if (name === \"aditional\") {\n                    originColor = \"rgb(120,206,179)\";\n                  } else {\n                    originColor = \"rgb(84,169,139)\";\n                  }\n                  othermod.style.backgroundColor = originColor;\n                  storage.dndChangeColor(\n                    adyear,\n                    major,\n                    colid,\n                    othermod.id,\n                    originColor\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n      i++;\n    }\n  }\n\n  checkPre3(code, initparent, currentParent) {\n    //drag from 1 col to another col\n    //1.update its own color if its color is black\n    const { adyear, major } = this.props;\n    let initcol = parseInt(initparent.substring(1));\n    let currentcol = parseInt(currentParent.substring(1));\n    let mod = document.getElementById(code);\n    let prerequisite = JSON.parse(mod.getAttribute(\"parsedpre\"));\n\n    if (\n      (mod.style.backgroundColor === \"black\" && currentcol > initcol) ||\n      (mod.style.backgroundColor !== \"black\" && currentcol < initcol)\n    ) {\n      if (\" and \" in prerequisite) {\n        //check for prerequisite[\" and \"]\n        let totalnoofmods = 0;\n        let totalcounter = 0;\n        for (let p of prerequisite[\" and \"]) {\n          //check for prerequisite[\" and \"][\" or \"]\n          totalnoofmods++;\n          if (p[\" or \"] !== undefined) {\n            let or = p[\" or \"];\n            let count = 0;\n            for (let o of or) {\n              if (document.getElementById(o) === null) {\n                continue;\n              }\n              let oparent = document.getElementById(o).parentElement\n                .parentElement.id;\n              if (\n                oparent !== \"SearchBarContainer\" &&\n                oparent !== \"SideBarContainer\" &&\n                oparent !== \"dust\"\n              ) {\n                let ocol = parseInt(oparent.substring(1));\n                if (ocol < currentcol) {\n                  count++;\n                  break;\n                }\n              }\n            }\n            if (count > 0) {\n              totalcounter++;\n              continue;\n            } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n            else {\n              break;\n            } //else color = black and break\n            //check for normal code in prerequisite[\" and \"]\n          } else {\n            if (document.getElementById(p) === null) {\n              break;\n            }\n            let oparent = document.getElementById(p).parentElement.parentElement\n              .id;\n            if (\n              oparent !== \"SearchBarContainer\" &&\n              oparent !== \"SideBarContainer\" &&\n              oparent !== \"dust\"\n            ) {\n              let ocol = parseInt(oparent.substring(1));\n              if (ocol < currentcol) {\n                totalcounter++;\n                continue;\n              } // if p is in front of the mod, continue\n              else {\n                break;\n              } //else color = black and stop checking\n            } else {\n              break;\n            }\n          }\n        }\n        if (totalcounter === totalnoofmods) {\n          let name = mod.getAttribute(\"name\");\n          let originColor;\n          if (name === \"additional\") {\n            originColor = \"rgb(120,206,179)\";\n          } else {\n            originColor = \"rgb(84,169,139)\";\n          }\n          mod.style.backgroundColor = originColor;\n          storage.dndChangeColor(\n            adyear,\n            major,\n            currentParent,\n            mod.id,\n            originColor\n          );\n        }\n      } else if (\" or \" in prerequisite) {\n        //check for prerequisite[' or ']\n        let count = 0;\n        for (let o of prerequisite[\" or \"]) {\n          if (document.getElementById(o) === null) {\n            continue;\n          }\n          let oparent = document.getElementById(o).parentElement.parentElement\n            .id;\n          if (\n            oparent !== \"SearchBarContainer\" &&\n            oparent !== \"SideBarContainer\" &&\n            oparent !== \"dust\"\n          ) {\n            let ocol = parseInt(oparent.substring(1));\n            if (ocol < currentcol) {\n              count++;\n              break;\n            }\n          }\n        }\n        if (count === 0) {\n          mod.style.backgroundColor = \"black\";\n          storage.dndChangeColor(adyear, major, currentParent, mod.id, \"black\");\n        } else {\n          let name = mod.getAttribute(\"name\");\n          let originColor;\n          if (name === \"additional\") {\n            originColor = \"rgb(120,206,179)\";\n          } else {\n            originColor = \"rgb(84,169,139)\";\n          }\n          mod.style.backgroundColor = originColor;\n          storage.dndChangeColor(\n            adyear,\n            major,\n            currentParent,\n            mod.id,\n            originColor\n          );\n        }\n      }\n    }\n    //end of check for self\n\n    //2. check for other mods on col between init and current\n    let i = Math.min(parseInt(initparent.substring(1)), currentcol);\n    let end = Math.max(parseInt(initparent.substring(1)), currentcol);\n\n    while (i <= end) {\n      const colid = \"s\" + i;\n      if (document.getElementById(colid) != null) {\n        let children = document.getElementById(colid).children;\n        if (children.length > 0) {\n          //check for each child\n          for (let j = 0; j < children.length; j++) {\n            let othermod = children[j].firstChild;\n            let otherprerequisite = JSON.parse(\n              othermod.getAttribute(\"parsedpre\")\n            );\n            let name = othermod.getAttribute(\"name\");\n            let originColor = \"\";\n            if (name === \"additional\") {\n              originColor = \"rgb(120,206,179)\";\n            } else {\n              originColor = \"rgb(84,169,139)\";\n            }\n            if (\" and \" in otherprerequisite) {\n              let totalnoofmods = 0;\n              let totalcounter = 0;\n              //check for prerequisite[\" and \"]\n              for (let p of otherprerequisite[\" and \"]) {\n                //check for prerequisite[\" and \"][\" or \"]\n                totalnoofmods++;\n                if (p[\" or \"] !== undefined) {\n                  let or = p[\" or \"];\n                  let count = 0;\n                  for (let r of or) {\n                    if (document.getElementById(r) === null) {\n                      continue;\n                    }\n                    let rparent = document.getElementById(r).parentElement\n                      .parentElement.id;\n                    if (\n                      rparent !== \"SearchBarContainer\" &&\n                      rparent !== \"SideBarContainer\" &&\n                      rparent !== \"dust\"\n                    ) {\n                      let ocol = parseInt(rparent.substring(1));\n                      if (ocol < i) {\n                        count++;\n                        break;\n                      }\n                    }\n                  }\n                  if (count > 0) {\n                    totalcounter++;\n                    continue;\n                  } //if there is at least one mod in \"or\" exists, check for other mod in \"and\"\n                  else {\n                    othermod.style.backgroundColor = \"black\";\n                    storage.dndChangeColor(\n                      adyear,\n                      major,\n                      colid,\n                      othermod.id,\n                      \"black\"\n                    );\n                    break;\n                  } //else color = black and break\n                  //check for normal code in prerequisite[\" and \"]\n                } else {\n                  if (document.getElementById(p) === null) {\n                    othermod.style.backgroundColor = \"black\";\n                    storage.dndChangeColor(\n                      adyear,\n                      major,\n                      colid,\n                      othermod.id,\n                      \"black\"\n                    );\n                    break;\n                  }\n                  let rparent = document.getElementById(p).parentElement\n                    .parentElement.id;\n                  if (\n                    rparent !== \"SearchBarContainer\" &&\n                    rparent !== \"SideBarContainer\" &&\n                    rparent !== \"dust\"\n                  ) {\n                    let ocol = parseInt(rparent.substring(1));\n                    if (ocol < i) {\n                      totalcounter++;\n                      continue;\n                    } // if p is in front of the mod, continue\n                    else {\n                      othermod.style.backgroundColor = \"black\";\n                      storage.dndChangeColor(\n                        adyear,\n                        major,\n                        colid,\n                        othermod.id,\n                        \"black\"\n                      );\n                      break;\n                    } //else color = black and stop checking\n                  } else {\n                    othermod.style.backgroundColor = \"black\";\n                    storage.dndChangeColor(\n                      adyear,\n                      major,\n                      colid,\n                      othermod.id,\n                      \"black\"\n                    );\n                    break;\n                  }\n                }\n              }\n              if (totalcounter === totalnoofmods) {\n                othermod.style.backgroundColor = originColor;\n                storage.dndChangeColor(\n                  adyear,\n                  major,\n                  colid,\n                  othermod.id,\n                  originColor\n                );\n              }\n            } else if (otherprerequisite[\" or \"] !== undefined) {\n              //check for prerequisite[' or ']\n              let count = 0;\n              for (let m of otherprerequisite[\" or \"]) {\n                if (document.getElementById(m) === null) {\n                  continue;\n                }\n                let oparent = document.getElementById(m).parentElement\n                  .parentElement.id;\n                if (\n                  oparent !== \"SearchBarContainer\" &&\n                  oparent !== \"SideBarContainer\" &&\n                  oparent !== \"dust\"\n                ) {\n                  let ocol = parseInt(oparent.substring(1));\n                  if (ocol < i) {\n                    count++;\n                    break;\n                  }\n                }\n              }\n              if (count === 0) {\n                othermod.style.backgroundColor = \"black\";\n                storage.dndChangeColor(\n                  adyear,\n                  major,\n                  colid,\n                  othermod.id,\n                  \"black\"\n                );\n              } else {\n                othermod.style.backgroundColor = originColor;\n                storage.dndChangeColor(\n                  adyear,\n                  major,\n                  colid,\n                  othermod.id,\n                  originColor\n                );\n              }\n            }\n          }\n        }\n      }\n      i++;\n    }\n  }\n}\n\nDraggable.propTypes = {\n  id: PropTypes.string,\n  children: PropTypes.node\n};\n"]},"metadata":{},"sourceType":"module"}