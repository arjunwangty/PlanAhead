{"ast":null,"code":"import \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/arjunwang/PlanAhead_master cloud/client/src/secondPage/newSideBar.jsx\";\nimport React, { Component } from \"react\";\nimport Draggable from \"../component/draggable\";\nimport Droppable from \"../component/droppable\";\nimport Mod from \"../component/mod\";\nimport storage from \"../component/storage\";\nimport \"../style/sidebar.less\";\nconst Title = _Typography.Title;\n\nclass NSideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      draggables: []\n    };\n  }\n\n  componentWillMount() {\n    const _this$props = this.props,\n          adyear = _this$props.adyear,\n          major = _this$props.major,\n          init = _this$props.init;\n    let draggables = [];\n\n    if (init) {\n      let p = \"../data/programmes/\".concat(adyear.substring(0, 6), \"/\").concat(major, \".json\");\n      fetch(p).then(res => res.json()).then(data => {\n        let store = [];\n\n        for (var m in data) {\n          draggables.push([m, \"rgb(84,169,139)\", \"firstMajor\"]);\n          store.push([m, \"rgb(84,169,139)\", \"firstMajor\"]);\n        }\n\n        storage.init(adyear, major, store);\n        this.setState({\n          draggables: draggables\n        });\n      });\n    } else {\n      let storeSideBar = storage.getYMCol(adyear, major, \"SideBarContainer\");\n\n      for (var m of storeSideBar) {\n        draggables.push(m);\n      }\n\n      this.setState({\n        draggables: draggables\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Title, {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"First-major modules\"), React.createElement(Droppable, {\n      id: \"SideBar\",\n      isDroppable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"SideBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.draggables.map(mod => React.createElement(Draggable, {\n      className: \"list-inline-item\",\n      id: \"\".concat(mod[0], \"Draggable\"),\n      key: mod[0],\n      name: mod[2],\n      adyear: this.props.adyear,\n      major: this.props.major,\n      parent: \"SideBarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Mod, {\n      id: mod[0],\n      key: mod[0],\n      code: mod[0],\n      name: mod[2],\n      color: mod[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default NSideBar;","map":{"version":3,"sources":["/Users/arjunwang/PlanAhead_master cloud/client/src/secondPage/newSideBar.jsx"],"names":["React","Component","Draggable","Droppable","Mod","storage","Title","NSideBar","constructor","props","state","draggables","componentWillMount","adyear","major","init","p","substring","fetch","then","res","json","data","store","m","push","setState","storeSideBar","getYMCol","render","map","mod"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Draggable from \"../component/draggable\";\r\nimport Droppable from \"../component/droppable\";\r\nimport Mod from \"../component/mod\";\r\nimport storage from \"../component/storage\";\r\nimport \"../style/sidebar.less\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\nclass NSideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { draggables: [] };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { adyear, major, init } = this.props;\r\n    let draggables = [];\r\n    if (init) {\r\n      let p = `../data/programmes/${adyear.substring(0, 6)}/${major}.json`;\r\n      fetch(p)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          let store = [];\r\n          for (var m in data) {\r\n            draggables.push([m, \"rgb(84,169,139)\", \"firstMajor\"]);\r\n            store.push([m, \"rgb(84,169,139)\", \"firstMajor\"]);\r\n          }\r\n          storage.init(adyear, major, store);\r\n          this.setState({ draggables: draggables });\r\n        });\r\n    } else {\r\n      let storeSideBar = storage.getYMCol(adyear, major, \"SideBarContainer\");\r\n      for (var m of storeSideBar) {\r\n        draggables.push(m);\r\n      }\r\n      this.setState({ draggables: draggables });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <Title className=\"title\">First-major modules</Title>\r\n        <Droppable id=\"SideBar\" isDroppable={true}>\r\n          <div id=\"SideBarContainer\">\r\n            {this.state.draggables.map(mod => (\r\n              <Draggable\r\n                className=\"list-inline-item\"\r\n                id={`${mod[0]}Draggable`}\r\n                key={mod[0]}\r\n                name={mod[2]}\r\n                adyear={this.props.adyear}\r\n                major={this.props.major}\r\n                parent=\"SideBarContainer\"\r\n              >\r\n                <Mod\r\n                  id={mod[0]}\r\n                  key={mod[0]}\r\n                  code={mod[0]}\r\n                  name={mod[2]}\r\n                  color={mod[1]}\r\n                />\r\n              </Draggable>\r\n            ))}\r\n          </div>\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NSideBar;\r\n"]},"metadata":{},"sourceType":"module"}