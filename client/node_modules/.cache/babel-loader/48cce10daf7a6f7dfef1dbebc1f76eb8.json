{"ast":null,"code":"var _jsxFileName = \"/Users/arjunwang/PlanAhead copy/client/src/component/mod.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default class Mod extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showInfo = this.showInfo.bind(this);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    const address = \"../data/modules/\".concat(this.props.code, \".json\");\n    fetch(address).then(res => res.json()).then(data => {\n      const moduleTitle = data.moduleTitle,\n            moduleCredit = data.moduleCredit,\n            prerequisite = data.prerequisite,\n            moduleDescription = data.moduleDescription,\n            parsedPrerequisite = data.parsedPrerequisite;\n      let p = parsedPrerequisite;\n\n      if (parsedPrerequisite === \"nil\") {\n        p = JSON.stringify({});\n      } else {\n        p = JSON.stringify(parsedPrerequisite);\n      }\n\n      const style = {\n        width: \"100%\",\n        height: \"100%\",\n        borderWidth: \"0px\",\n        borderRadius: \"4px\",\n        margin: \"0\",\n        backgroundColor: this.props.color,\n        color: \"white\",\n        textAlign: \"center\",\n        fontSize: \"13px\"\n      };\n      this.setState({\n        code: this.props.id,\n        title: moduleTitle,\n        mc: moduleCredit,\n        pre: prerequisite,\n        info: moduleDescription,\n        parsedpre: p,\n        style: style\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          code = _this$state.code,\n          title = _this$state.title,\n          mc = _this$state.mc,\n          style = _this$state.style,\n          parsedpre = _this$state.parsedpre;\n    return React.createElement(\"button\", {\n      id: code,\n      key: code,\n      title: title,\n      mc: mc,\n      className: \"btn btn-sm\",\n      style: style,\n      onClick: this.showInfo,\n      parsedpre: parsedpre,\n      name: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.code);\n  }\n\n  showInfo() {\n    const _this$state2 = this.state,\n          code = _this$state2.code,\n          mc = _this$state2.mc,\n          pre = _this$state2.pre,\n          info = _this$state2.info;\n    document.getElementById(\"ModuleCode\").innerText = code;\n    document.getElementById(\"ModuleCredits\").innerText = mc;\n    document.getElementById(\"ModulePrerequisite\").innerText = pre;\n    document.getElementById(\"ModuleDescription\").innerText = info;\n  }\n\n}\nMod.propTypes = {\n  id: PropTypes.string,\n  code: PropTypes.string,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["/Users/arjunwang/PlanAhead copy/client/src/component/mod.jsx"],"names":["React","PropTypes","Mod","Component","constructor","props","showInfo","bind","state","componentWillMount","address","code","fetch","then","res","json","data","moduleTitle","moduleCredit","prerequisite","moduleDescription","parsedPrerequisite","p","JSON","stringify","style","width","height","borderWidth","borderRadius","margin","backgroundColor","color","textAlign","fontSize","setState","id","title","mc","pre","info","parsedpre","render","name","document","getElementById","innerText","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,OAAO,6BAAsB,KAAKL,KAAL,CAAWM,IAAjC,UAAb;AACAC,IAAAA,KAAK,CAACF,OAAD,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AAAA,YAEVC,WAFU,GAORD,IAPQ,CAEVC,WAFU;AAAA,YAGVC,YAHU,GAORF,IAPQ,CAGVE,YAHU;AAAA,YAIVC,YAJU,GAORH,IAPQ,CAIVG,YAJU;AAAA,YAKVC,iBALU,GAORJ,IAPQ,CAKVI,iBALU;AAAA,YAMVC,kBANU,GAORL,IAPQ,CAMVK,kBANU;AAQZ,UAAIC,CAAC,GAAGD,kBAAR;;AACA,UAAIA,kBAAkB,KAAK,KAA3B,EAAkC;AAChCC,QAAAA,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAJ;AACD,OAFD,MAEO;AACLF,QAAAA,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeH,kBAAf,CAAJ;AACD;;AACD,YAAMI,KAAK,GAAG;AACZC,QAAAA,KAAK,EAAE,MADK;AAEZC,QAAAA,MAAM,EAAE,MAFI;AAGZC,QAAAA,WAAW,EAAE,KAHD;AAIZC,QAAAA,YAAY,EAAE,KAJF;AAKZC,QAAAA,MAAM,EAAE,GALI;AAMZC,QAAAA,eAAe,EAAE,KAAK1B,KAAL,CAAW2B,KANhB;AAOZA,QAAAA,KAAK,EAAE,OAPK;AAQZC,QAAAA,SAAS,EAAE,QARC;AASZC,QAAAA,QAAQ,EAAE;AATE,OAAd;AAWA,WAAKC,QAAL,CAAc;AACZxB,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAW+B,EADL;AAEZC,QAAAA,KAAK,EAAEpB,WAFK;AAGZqB,QAAAA,EAAE,EAAEpB,YAHQ;AAIZqB,QAAAA,GAAG,EAAEpB,YAJO;AAKZqB,QAAAA,IAAI,EAAEpB,iBALM;AAMZqB,QAAAA,SAAS,EAAEnB,CANC;AAOZG,QAAAA,KAAK,EAAEA;AAPK,OAAd;AASD,KApCH;AAqCD;;AAEDiB,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKlC,KAD5C;AAAA,UACCG,IADD,eACCA,IADD;AAAA,UACO0B,KADP,eACOA,KADP;AAAA,UACcC,EADd,eACcA,EADd;AAAA,UACkBb,KADlB,eACkBA,KADlB;AAAA,UACyBgB,SADzB,eACyBA,SADzB;AAEP,WACE;AACE,MAAA,EAAE,EAAE9B,IADN;AAEE,MAAA,GAAG,EAAEA,IAFP;AAGE,MAAA,KAAK,EAAE0B,KAHT;AAIE,MAAA,EAAE,EAAEC,EAJN;AAKE,MAAA,SAAS,EAAC,YALZ;AAME,MAAA,KAAK,EAAEb,KANT;AAOE,MAAA,OAAO,EAAE,KAAKnB,QAPhB;AAQE,MAAA,SAAS,EAAEmC,SARb;AASE,MAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWsC,IATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWG,KAAKtC,KAAL,CAAWM,IAXd,CADF;AAeD;;AAEDL,EAAAA,QAAQ,GAAG;AAAA,yBACuB,KAAKE,KAD5B;AAAA,UACDG,IADC,gBACDA,IADC;AAAA,UACK2B,EADL,gBACKA,EADL;AAAA,UACSC,GADT,gBACSA,GADT;AAAA,UACcC,IADd,gBACcA,IADd;AAETI,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDnC,IAAlD;AACAiC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,GAAqDR,EAArD;AACAM,IAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,SAA9C,GAA0DP,GAA1D;AACAK,IAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyDN,IAAzD;AACD;;AAzE8C;AA4EjDtC,GAAG,CAAC6C,SAAJ,GAAgB;AACdX,EAAAA,EAAE,EAAEnC,SAAS,CAAC+C,MADA;AAEdrC,EAAAA,IAAI,EAAEV,SAAS,CAAC+C,MAFF;AAGdX,EAAAA,KAAK,EAAEpC,SAAS,CAAC+C;AAHH,CAAhB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Mod extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showInfo = this.showInfo.bind(this);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    const address = `../data/modules/${this.props.code}.json`;\n    fetch(address)\n      .then(res => res.json())\n      .then(data => {\n        const {\n          moduleTitle,\n          moduleCredit,\n          prerequisite,\n          moduleDescription,\n          parsedPrerequisite\n        } = data;\n        let p = parsedPrerequisite;\n        if (parsedPrerequisite === \"nil\") {\n          p = JSON.stringify({});\n        } else {\n          p = JSON.stringify(parsedPrerequisite);\n        }\n        const style = {\n          width: \"100%\",\n          height: \"100%\",\n          borderWidth: \"0px\",\n          borderRadius: \"4px\",\n          margin: \"0\",\n          backgroundColor: this.props.color,\n          color: \"white\",\n          textAlign: \"center\",\n          fontSize: \"13px\"\n        };\n        this.setState({\n          code: this.props.id,\n          title: moduleTitle,\n          mc: moduleCredit,\n          pre: prerequisite,\n          info: moduleDescription,\n          parsedpre: p,\n          style: style\n        });\n      });\n  }\n\n  render() {\n    const { code, title, mc, style, parsedpre } = this.state;\n    return (\n      <button\n        id={code}\n        key={code}\n        title={title}\n        mc={mc}\n        className=\"btn btn-sm\"\n        style={style}\n        onClick={this.showInfo}\n        parsedpre={parsedpre}\n        name={this.props.name}\n      >\n        {this.props.code}\n      </button>\n    );\n  }\n\n  showInfo() {\n    const { code, mc, pre, info } = this.state;\n    document.getElementById(\"ModuleCode\").innerText = code;\n    document.getElementById(\"ModuleCredits\").innerText = mc;\n    document.getElementById(\"ModulePrerequisite\").innerText = pre;\n    document.getElementById(\"ModuleDescription\").innerText = info;\n  }\n}\n\nMod.propTypes = {\n  id: PropTypes.string,\n  code: PropTypes.string,\n  title: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}